name: Documentation Workflow

on:                       # Run action when changes are pushed or pull requests are accepted
  push:
    paths:
    - 'mpl_plotter/**'    # Run only on source or documentation changes
    - 'docs/**'
    - '**/docs.yml'       # Allow test runs
    branches-ignore: 
      - 'docs'            # Run on pushes to any branch except the doc hosting branch
  pull_request:
    branches-ignore:
      - 'docs'            # Run on pull requests to any branch except the doc hosting branch
  release:
    types: [ published ]

jobs:

  # ===========================
  #
  #     Documentation Site
  #
  # ===========================
  site:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Set up Git repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    # Get host preference from config.env file ===================
    - name: Load config variables into env
      run: |
        grep -v '^#' config.env | tr -d "[:blank:]" >> $GITHUB_ENV
    - name: Report host(s)
      run: |
        if ! [ -z "${branch}" ]
          # If a host branch has been provided
          then echo "Host: ${{ github.event.repository.name }}.$branch"
        fi
        if ! [ -z "${dest_gh_repository+x}" ]
          # If a host repository has been provided
          then echo "Host: $dest_gh_repository.$dest_branch"
        fi
    # Generate documentation =====================================
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r $docsdirectory/source/requirements.txt
    - name: Generate
      run:  |
        cd $docsdirectory
        make html
        echo ::set-output name=html::$docsdirectory/build/html
      id: generate
    # REPO hosting ===============================================
    - name: Ready up
      if: env.dest_gh_repository != ''
      run: |
        cd $docsdirectory/build/html
        touch .nojekyll
    - name: Push
      if: env.dest_gh_repository != ''
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source-directory: ${{ steps.generate.outputs.html }}    # Cannot use $ variable substitution in function inputs
        destination-github-username: 'mpl-plotter-docs'
        destination-repository-name: 'mpl-plotter-docs.github.io'
        user-email: antonlopezr99@gmail.com
        commit-message: See ORIGIN_COMMIT from $GITHUB_REF
        target-branch: main
    # BRANCH hosting =============================================
    - name: Stow
      if: env.branch != ''
      run: |
        cd ..
        mkdir docs
        mv -v ${{ github.event.repository.name }}/$docsdirectory/build/html/* docs
    - name: Switch
      if: env.branch != ''
      uses: actions/checkout@v3
      with:
        ref: docs
    - name: Set
      if: env.branch != ''
      run: |
        mkdir -p docs
        cd docs
        rm -rf *
    - name: Ready
      if: env.branch != ''
      run: |
        mv -v ../docs/* docs
        touch .nojekyll
    - name: Push
      if: env.branch != ''
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add -A && git commit --allow-empty -m "Updated Documentation"
        git push -u origin docs

  # ===========================
  #
  #          Report
  #
  # ===========================
  report:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Set up Git repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    # Get host preference from config.env file ===================
    - name: Load config variables into env
      run: |
        grep -v '^#' config.env | tr -d "[:blank:]" >> $GITHUB_ENV
    # Generate LaTeX code ========================================
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r $docsdirectory/source/requirements.txt
    - name: Generate LaTeX code
      run:  |
        cd $docsdirectory
        make latex
        echo ::set-output name=latex::$docsdirectory/build/latex
      id: generate
    - name: Install LaTeX engine
      run: |
        sudo apt-get update
        sudo apt-get install texlive
        sudo apt-get install texlive-luatex
        sudo apt-get install -y latexmk
    - name: Install LaTeX dependencies
      run: |
        sudo apt-get install -y xindy
    - name: Install LaTeX packages
      run: |
        sudo apt-get install texlive-latex-extra
        sudo apt-get install texlive-fonts-extra
    - name: Compile
      run: |
        cd $docsdirectory/build/latex
        make LATEXMKOPTS="-lualatex"
    - name: Set
      run: |
        mv -v $docsdirectory/build/latex/main.pdf $docsdirectory/${{ github.event.repository.name }}.pdf
    - name: Push
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add $docsdirectory/${{ github.event.repository.name }}.pdf && git commit --allow-empty -m "Updated Report"
        git push -u
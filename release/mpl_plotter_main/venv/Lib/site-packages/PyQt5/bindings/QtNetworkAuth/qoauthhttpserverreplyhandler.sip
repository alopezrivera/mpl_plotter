// qoauthhttpserverreplyhandler.sip generated by MetaSIP
//
// This file is part of the QtNetworkAuth Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt5.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_5_10_0 -)

class QOAuthHttpServerReplyHandler : QOAuthOobReplyHandler
{
%TypeHeaderCode
#include <qoauthhttpserverreplyhandler.h>
%End

public:
    explicit QOAuthHttpServerReplyHandler(QObject *parent /TransferThis/ = 0);
    QOAuthHttpServerReplyHandler(quint16 port, QObject *parent /TransferThis/ = 0);
    QOAuthHttpServerReplyHandler(const QHostAddress &address, quint16 port, QObject *parent /TransferThis/ = 0);
    virtual ~QOAuthHttpServerReplyHandler();
    virtual QString callback() const;
    QString callbackPath() const;
    void setCallbackPath(const QString &path);
    QString callbackText() const;
    void setCallbackText(const QString &text);
    quint16 port() const;
    bool listen(const QHostAddress &address = QHostAddress::SpecialAddress::Any, quint16 port = 0);
    void close();
    bool isListening() const;
};

%End
